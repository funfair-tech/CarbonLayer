name                = "Get UK Carbon generation mix"
type                = "directrequest"
schemaVersion       = 1
evmChainID          = 11155111
contractAddress     = "0xd3e4028bC6b50091112641b565bE049f535D6299" # operator address
minIncomingConfirmations = 0

observationSource   = """
    decode_log      [type="ethabidecodelog"
                        abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                        data="$(jobRun.logData)"
                        topics="$(jobRun.logTopics)"]

    fetch                [type="http" method=GET url="https://api.carbonintensity.org.uk/generation"];

    decode_log -> fetch

    // biomass
    parse_0_fuel       [type="jsonparse" path="data,generationmix,0,fuel" lax=true];
    parse_0_perc       [type="jsonparse" path="data,generationmix,0,perc" lax=true];

    // coal
    parse_1_fuel       [type="jsonparse" path="data,generationmix,1,fuel" lax=true];
    parse_1_perc       [type="jsonparse" path="data,generationmix,1,perc" lax=true];

    // imports
    parse_2_fuel       [type="jsonparse" path="data,generationmix,2,fuel" lax=true];
    parse_2_perc       [type="jsonparse" path="data,generationmix,2,perc" lax=true];

    // gas
    parse_3_fuel       [type="jsonparse" path="data,generationmix,3,fuel" lax=true];
    parse_3_perc       [type="jsonparse" path="data,generationmix,3,perc" lax=true];

    // nuclear
    parse_4_fuel       [type="jsonparse" path="data,generationmix,4,fuel" lax=true];
    parse_4_perc       [type="jsonparse" path="data,generationmix,4,perc" lax=true];

    // other
    parse_5_fuel       [type="jsonparse" path="data,generationmix,5,fuel" lax=true];
    parse_5_perc       [type="jsonparse" path="data,generationmix,5,perc" lax=true];

    // hydro
    parse_6_fuel       [type="jsonparse" path="data,generationmix,6,fuel" lax=true];
    parse_6_perc       [type="jsonparse" path="data,generationmix,6,perc" lax=true];

    // solar
    parse_7_fuel       [type="jsonparse" path="data,generationmix,7,fuel" lax=true];
    parse_7_perc       [type="jsonparse" path="data,generationmix,7,perc" lax=true];

    // wind
    parse_8_fuel       [type="jsonparse" path="data,generationmix,8,fuel" lax=true];
    parse_8_perc       [type="jsonparse" path="data,generationmix,8,perc" lax=true];

    // storage
    parse_9_fuel       [type="jsonparse" path="data,generationmix,9,fuel" lax=true];
    parse_9_perc       [type="jsonparse" path="data,generationmix,9,perc" lax=true];

    fetch -> parse_0_fuel -> encode_data
    fetch -> parse_0_perc -> encode_data

    fetch -> parse_1_fuel -> encode_data
    fetch -> parse_1_perc -> encode_data

    fetch -> parse_2_fuel -> encode_data
    fetch -> parse_2_perc -> encode_data

    fetch -> parse_2_fuel -> encode_data
    fetch -> parse_2_perc -> encode_data

    fetch -> parse_3_fuel -> encode_data
    fetch -> parse_3_perc -> encode_data

    fetch -> parse_4_fuel -> encode_data
    fetch -> parse_4_perc -> encode_data

    fetch -> parse_5_fuel -> encode_data
    fetch -> parse_5_perc -> encode_data

    fetch -> parse_6_fuel -> encode_data
    fetch -> parse_6_perc -> encode_data

    fetch -> parse_7_fuel -> encode_data
    fetch -> parse_7_perc -> encode_data

    fetch -> parse_8_fuel -> encode_data
    fetch -> parse_8_perc -> encode_data

    fetch -> parse_9_fuel -> encode_data
    fetch -> parse_9_perc -> encode_data

    encode_data [type="ethabiencode"
        abi="(bytes32 _requestId, string _fuel0Name, int64 _fuel0Percentage, string _fuel1Name, int64 _fuel1Percentage, string _fuel2Name, int64 _fuel2Percentage, string _fuel3Name, int64 _fuel3Percentage, string _fuel4Name, int64 _fuel4Percentage, string _fuel5Name, int64 _fuel5Percentage, string _fuel6Name, int64 _fuel6Percentage, string _fuel7Name, int64 _fuel7Percentage, string _fuel8Name, int64 _fuel8Percentage, string _fuel9Name, int64 _fuel9Percentage)"
        data="{\\"_requestId\\": $(decode_log.requestId), \\"_fuel0Name\\": $(parse_0_fuel), \\"_fuel0Percentage\\": $(parse_0_perc), \\"_fuel1Name\\": $(parse_1_fuel), \\"_fuel1Percentage\\": $(parse_1_perc), \\"_fuel2Name\\": $(parse_2_fuel), \\"_fuel2Percentage\\": $(parse_2_perc), \\"_fuel3Name\\": $(parse_3_fuel), \\"_fuel3Percentage\\": $(parse_3_perc), \\"_fuel4Name\\": $(parse_4_fuel), \\"_fuel4Percentage\\": $(parse_4_perc), \\"_fuel5Name\\": $(parse_5_fuel), \\"_fuel5Percentage\\": $(parse_5_perc), \\"_fuel6Name\\": $(parse_6_fuel), \\"_fuel6Percentage\\": $(parse_6_perc), \\"_fuel7Name\\": $(parse_7_fuel), \\"_fuel7Percentage\\": $(parse_7_perc), \\"_fuel8Name\\": $(parse_8_fuel), \\"_fuel8Percentage\\": $(parse_8_perc), \\"_fuel9Name\\": $(parse_9_fuel), \\"_fuel9Percentage\\": $(parse_9_perc) }"]

    encode_tx       [type="ethabiencode"
                        abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                        data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"]
    submit_tx       [type="ethtx" to="0xd3e4028bC6b50091112641b565bE049f535D6299" data="$(encode_tx)"]

    encode_data -> encode_tx -> submit_tx;

"""
