contractAddress = "0xd3e4028bC6b50091112641b565bE049f535D6299" # operator address
evmChainID = 11155111 
minIncomingConfirmations = 0 
name = "Get UK Carbon generation mix array" 
schemaVersion = 1 
type = "directrequest" 

observationSource = """
    decode_log      [type="ethabidecodelog"
                        abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                        data="$(jobRun.logData)"
                        topics="$(jobRun.logTopics)"]

    fetch           [type="http" method=GET url="https://api.carbonintensity.org.uk/generation"]

    decode_log -> fetch


    // biomass
    parse_0_fuel       [type="jsonparse" path="data,generationmix,0,fuel" lax=true];
    parse_0_perc       [type="jsonparse" path="data,generationmix,0,perc" lax=true];
    multiply_0_perc    [type="multiply" input="$(parse_0_perc)" times=100]

    // coal
    parse_1_fuel       [type="jsonparse" path="data,generationmix,1,fuel" lax=true];
    parse_1_perc       [type="jsonparse" path="data,generationmix,1,perc" lax=true];
    multiply_1_perc    [type="multiply" input="$(parse_1_perc)" times=100]

    // imports
    parse_2_fuel       [type="jsonparse" path="data,generationmix,2,fuel" lax=true];
    parse_2_perc       [type="jsonparse" path="data,generationmix,2,perc" lax=true];
    multiply_2_perc    [type="multiply" input="$(parse_2_perc)" times=100]

    // gas
    parse_3_fuel       [type="jsonparse" path="data,generationmix,3,fuel" lax=true];
    parse_3_perc       [type="jsonparse" path="data,generationmix,3,perc" lax=true];
    multiply_3_perc    [type="multiply" input="$(parse_3_perc)" times=100]

    // nuclear
    parse_4_fuel       [type="jsonparse" path="data,generationmix,4,fuel" lax=true];
    parse_4_perc       [type="jsonparse" path="data,generationmix,4,perc" lax=true];
    multiply_4_perc    [type="multiply" input="$(parse_4_perc)" times=100]

    // other
    parse_5_fuel       [type="jsonparse" path="data,generationmix,5,fuel" lax=true];
    parse_5_perc       [type="jsonparse" path="data,generationmix,5,perc" lax=true];
    multiply_5_perc    [type="multiply" input="$(parse_5_perc)" times=100]

    // hydro
    parse_6_fuel       [type="jsonparse" path="data,generationmix,6,fuel" lax=true];
    parse_6_perc       [type="jsonparse" path="data,generationmix,6,perc" lax=true];
    multiply_6_perc    [type="multiply" input="$(parse_6_perc)" times=100]

    // solar
    parse_7_fuel       [type="jsonparse" path="data,generationmix,7,fuel" lax=true];
    parse_7_perc       [type="jsonparse" path="data,generationmix,7,perc" lax=true];
    multiply_7_perc    [type="multiply" input="$(parse_7_perc)" times=100]

    // wind
    parse_8_fuel       [type="jsonparse" path="data,generationmix,8,fuel" lax=true];
    parse_8_perc       [type="jsonparse" path="data,generationmix,8,perc" lax=true];
    multiply_8_perc    [type="multiply" input="$(parse_8_perc)" times=100]


    fetch -> parse_0_fuel -> encode_data
    fetch -> parse_0_perc -> multiply_0_perc -> encode_data

    fetch -> parse_1_fuel -> encode_data
    fetch -> parse_1_perc -> multiply_1_perc -> encode_data

    fetch -> parse_2_fuel -> encode_data
    fetch -> parse_2_perc -> multiply_2_perc -> encode_data

    fetch -> parse_3_fuel -> encode_data
    fetch -> parse_3_perc -> multiply_3_perc -> encode_data

    fetch -> parse_4_fuel -> encode_data
    fetch -> parse_4_perc -> multiply_4_perc -> encode_data

    fetch -> parse_5_fuel -> encode_data
    fetch -> parse_5_perc -> multiply_5_perc -> encode_data

    fetch -> parse_6_fuel -> encode_data
    fetch -> parse_6_perc -> multiply_6_perc -> encode_data

    fetch -> parse_7_fuel -> encode_data
    fetch -> parse_7_perc -> multiply_7_perc -> encode_data

    fetch -> parse_8_fuel -> encode_data
    fetch -> parse_8_perc -> multiply_8_perc -> encode_data

    encode_data     [type="ethabiencode"
                        abi="(bytes32 requestId, string[] fuelNames, uint16[] fuelPercentages)"
                        data="{\\"requestId\\": $(decode_log.requestId), \\"fuelNames\\": [$(parse_0_fuel), $(parse_1_fuel), $(parse_2_fuel), $(parse_3_fuel), $(parse_4_fuel), $(parse_5_fuel), $(parse_6_fuel), $(parse_7_fuel), $(parse_8_fuel)], \\"fuelPercentages\\": [$(multiply_0_perc), $(multiply_1_perc), $(multiply_2_perc), $(multiply_3_perc), $(multiply_4_perc), $(multiply_5_perc), $(multiply_6_perc), $(multiply_7_perc), $(multiply_8_perc)]}"]

    encode_tx       [type="ethabiencode"
                        abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                        data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\":   $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"]
    submit_tx       [type="ethtx" to="0xd3e4028bC6b50091112641b565bE049f535D6299" data="$(encode_tx)"]

    
    encode_data -> encode_tx -> submit_tx

"""
